

+function ($) {
  'use strict';

  const jaksI18n = {};

  jaksI18n.lang = 'en';

  jaksI18n.loadFile = (lang, file, cb) => {
    if (!jaksI18n[lang]) jaksI18n[lang] = {};
    if (jaksI18n[lang][file]) {
      return cb(jaksI18n[lang][file]);
    }
    jQuery.getJSON(`lang/${lang}/${file}.json`, (data) => {
      // if (err) return cb(null);
      jaksI18n[lang][file] = data;
      cb(data);
    });
  };

  jaksI18n.searchString = (lang, key, cb) => {
    let idx = key.indexOf(':');
    const file = key.substring(0, idx);
    key = key.substring(idx + 1);
    jaksI18n.loadFile(lang, file, (lg) => {
      // console.log(lg, key)
      idx = key.indexOf('.');
      while (idx > 0) {
        if (lg == null) {
          return cb(null);
        }
        lg = lg[key.substring(0, idx)];
        key = key.substring(idx + 1);
        idx = key.indexOf('.');
      }
      // console.log(lg, key)
      return cb(lg[key]);
    });
  };


  jaksI18n.setLanguage = (lang) => {
    if (lang) {
      jaksI18n[jaksI18n.lang] = {};
      jaksI18n[lang] = {};
      jaksI18n.lang = lang;
    }

    const array = $('*[jaks-i18n]');
    array.each(index => {
      var key = $(array[index]).attr('jaks-i18n');
      jaksI18n.searchString(jaksI18n.lang, key, text => {
        if (text == '') console.warn('Unable to find string named: ' + key);
        $(array[index]).text(text);
      });
    });
  };

  $(() => {
    let defaultLang = 'en';
    const check = '<i class="fa fa-check fa-ws pull-right"></i>';
    let chLang = (ev) => {
      const lang = $(ev.target).attr('data-lang');
      $('.dsp-lang').text(lang.toUpperCase());
      jaksI18n.setLanguage(lang);
      $('.btn-lang > i').remove();
      ev.target.innerHTML = check + ev.target.innerHTML;
      sessionStorage.setItem('jaks-lang', lang);
    };

    if (sessionStorage.getItem('jaks-lang')) {
      defaultLang = sessionStorage.getItem('jaks-lang');
    }

    chLang({ target: $(`.btn-lang[data-lang="${defaultLang}"]`)[0] });
    $('.btn-lang').click(chLang);
  });

}(jQuery);
